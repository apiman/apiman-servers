{
  "Metadata" : {
    "exportedOn" : 1446498249367,
    "apimanVersion" : "1.2.0-SNAPSHOT"
  },
  "Users" : [ {
    "username" : "admin",
    "fullName" : "admin",
    "email" : "admin@example.org",
    "joinedOn" : 1446497560853,
    "admin" : false
  } ],
  "Gateways" : [ {
    "id" : "TheGateway",
    "name" : "The Gateway",
    "createdBy" : "admin",
    "createdOn" : 1446498221897,
    "modifiedBy" : "admin",
    "modifiedOn" : 1446498221897,
    "type" : "REST",
    "configuration" : "{\"endpoint\":\"http://localhost:7777/api\",\"username\":\"admin\",\"password\":\"$CRYPT::Jvkgg2eXYVcy79Iw4buwAQ==\"}"
  } ],
  "Plugins" : [ {
    "id" : 1446498244145100,
    "groupId" : "io.apiman.plugins",
    "artifactId" : "apiman-plugins-transformation-policy",
    "version" : "1.2.0.Beta2",
    "name" : "Transformation Policy Plugin",
    "description" : "This plugin provides a very simple policy which can transform the request and/or response payload between XML and JSON.",
    "createdBy" : "admin",
    "createdOn" : 1446498244116,
    "deleted" : false
  } ],
  "Roles" : [ {
    "id" : "Owner",
    "name" : "Owner",
    "createdBy" : "admin",
    "createdOn" : 1446498182157,
    "autoGrant" : true,
    "permissions" : [ "svcAdmin", "svcEdit", "orgAdmin", "planView", "appView", "appEdit", "appAdmin", "planAdmin", "orgEdit", "planEdit", "svcView", "orgView" ]
  } ],
  "PolicyDefinitions" : [ {
    "id" : "RateLimitingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.RateLimitingPolicy",
    "name" : "Rate Limiting Policy",
    "description" : "Enforces rate configurable request rate limits on a service.  This ensures that consumers can't overload a service with too many requests.",
    "icon" : "tachometer",
    "templates" : [ {
      "template" : "Consumers are limited to @{limit} requests per @{granularity} per @{period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "QuotaPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.QuotaPolicy",
    "name" : "Quota Policy",
    "description" : "Provides a way to limit the total number of requests that can be sent to an API.",
    "icon" : "exchange",
    "templates" : [ {
      "template" : "Consumers cannot exceed their quota of @{limit} requests per @{granularity} per @{period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IgnoredResourcesPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IgnoredResourcesPolicy",
    "name" : "Ignored Resources Policy",
    "description" : "Requests satisfying the provided regular expression will be ignored.",
    "icon" : "eye-slash",
    "templates" : [ {
      "template" : "Requests matching any of the @{pathsToIgnore.size()} regular expressions provided will receive a 404 error code."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IPWhitelistPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IPWhitelistPolicy",
    "name" : "IP Whitelist Policy",
    "description" : "Only requests that originate from a specified set of valid IP addresses will be allowed through.",
    "icon" : "thumbs-up",
    "templates" : [ {
      "template" : "Only requests that originate from the set of @{ipList.size()} configured IP address(es) will be allowed to invoke the managed service."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "TransferQuotaPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.TransferQuotaPolicy",
    "name" : "Transfer Quota Policy",
    "description" : "Provides a way to limit the total number of bytes that can be transferred from (or to) an API.",
    "icon" : "download",
    "templates" : [ {
      "template" : "Consumers are limited to transferring @{limit} bytes per @{granularity} per @{period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IPBlacklistPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IPBlacklistPolicy",
    "name" : "IP Blacklist Policy",
    "description" : "Requests that originate from a specified set of valid IP addresses will be denied access.",
    "icon" : "thumbs-down",
    "templates" : [ {
      "template" : "Requests that originate from the set of @{ipList.size()} configured IP address(es) will be denied access to the managed service."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "CachingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.CachingPolicy",
    "name" : "Caching Policy",
    "description" : "Allows caching of API responses in the Gateway to reduce overall traffic to the back-end API.",
    "icon" : "hdd-o",
    "templates" : [ {
      "template" : "API responses will be cached for @{ttl} seconds."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "URLRewritingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.URLRewritingPolicy",
    "name" : "URL Rewriting Policy",
    "description" : "Responses from the back-end API will be modified by fixing up any incorrect URLs found with modified ones.  This is useful because apiman works through an API Gateway.",
    "icon" : "pencil-square",
    "templates" : [ {
      "template" : "Responses will be modified by finding all text matching regular expression '@{fromRegex}' with '@{toReplacement}'."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "transformation-policy",
    "policyImpl" : "plugin:io.apiman.plugins:apiman-plugins-transformation-policy:1.2.0.Beta2:war/io.apiman.plugins.transformation_policy.TransformationPolicy",
    "name" : "Transformation Policy",
    "description" : "Transforms the data from one format to another.",
    "icon" : "adjust",
    "templates" : [ ],
    "pluginId" : 1446498244145100,
    "formType" : "JsonSchema",
    "form" : "schemas/transformation-policyDef.schema",
    "deleted" : false
  }, {
    "id" : "BASICAuthenticationPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.BasicAuthenticationPolicy",
    "name" : "BASIC Authentication Policy",
    "description" : "Enables HTTP BASIC Authentication on a service.  Some configuration required.",
    "icon" : "lock",
    "templates" : [ {
      "template" : "Access to the service is protected by BASIC Authentication through the '@{realm}' authentication realm.  @if{forwardIdentityHttpHeader != null}Successfully authenticated requests will forward the authenticated identity to the back end service via the '@{forwardIdentityHttpHeader}' custom HTTP header.@end{}"
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "AuthorizationPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.AuthorizationPolicy",
    "name" : "Authorization Policy",
    "description" : "Enables fine grained authorization to API resources based on authenticated user roles.",
    "icon" : "users",
    "templates" : [ {
      "template" : "Appropriate authorization roles are required.  There are @{rules.size()} authorization rules defined."
    } ],
    "formType" : "Default",
    "deleted" : false
  } ],
  "Orgs" : [ ]
}